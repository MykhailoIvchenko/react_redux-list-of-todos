{"version":3,"sources":["features/filter.ts","features/currentTodo.ts","app/store.ts","features/todos.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Statuses","actions","todo","type","TodoActions","Set","payload","Remove","currentTodoReducer","state","action","id","title","completed","userId","TodosActions","FilterActions","query","SetQuery","status","SetStatus","filterReducer","All","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useDispatch","useSelector","TodoList","dispatch","todosToDisplay","todosFromDb","curQuery","curStatus","filteredTodos","Completed","Active","toLowerCase","includes","getTodosToDisplay","length","className","map","Fragment","onClick","setCurrentTodo","TodoFilter","setQuery","onSubmit","event","preventDefault","onChange","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","name","email","phone","user","setUser","useEffect","result","catch","href","App","isLoaded","setIsLoaded","error","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5bd4902d.chunk.js","sourcesContent":["// eslint-disable-next-line import/no-cycle\nimport { FilterActions } from '../app/store';\n\nexport enum Statuses {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n\ntype SetQueryAction = {\n  type: FilterActions.SetQuery;\n  payload: string;\n};\n\ntype SetStatusAction = {\n  type: FilterActions.SetStatus;\n  payload: string;\n};\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: FilterActions.SetQuery,\n  payload: query,\n});\n\nconst setStatus = (status: string): SetStatusAction => ({\n  type: FilterActions.SetStatus,\n  payload: status,\n});\n\nexport const actions = { setQuery, setStatus };\n\ntype State = {\n  query: string,\n  status: string,\n};\n\ntype Action = SetStatusAction | SetQueryAction;\n\nconst filterReducer = (\n  state: State = {\n    query: '',\n    status: Statuses.All,\n  },\n  action: Action,\n) : State => {\n  switch ((action.type)) {\n    case FilterActions.SetQuery: {\n      return {\n        ...state,\n        query: action.payload,\n      };\n    }\n\n    case FilterActions.SetStatus: {\n      return <State>{\n        ...state,\n        status: action.payload,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n// eslint-disable-next-line import/no-cycle\nimport { TodoActions } from '../app/store';\n\ntype RemoveTodoAction = { type: TodoActions.Remove };\n\ntype SetTodoAction = {\n  type: TodoActions.Set;\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: TodoActions.Remove });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: TodoActions.Set,\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case TodoActions.Set:\n      return {\n        ...action.payload,\n      };\n\n    case TodoActions.Remove:\n      return {\n        id: 0,\n        title: '',\n        completed: false,\n        userId: 0,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\n// eslint-disable-next-line import/no-cycle\nimport currentTodoReducer from '../features/currentTodo';\n// eslint-disable-next-line import/no-cycle\nimport filterReducer from '../features/filter';\n// eslint-disable-next-line import/no-cycle\nimport todosReducer from '../features/todos';\n\nexport enum TodosActions {\n  Set = 'todos/SET',\n}\n\nexport enum FilterActions {\n  SetQuery = 'filter/SET_QUERY',\n  SetStatus = 'filter/SET_STATUS',\n}\n\nexport enum TodoActions {\n  Remove = 'currentTodo/REMOVE',\n  Set = 'currentTodo/SET',\n}\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { Todo } from '../types/Todo';\n// eslint-disable-next-line import/no-cycle\nimport { TodosActions } from '../app/store';\n\ntype SetTodosAction = {\n  type: TodosActions.Set;\n  payload: Todo [];\n};\n\nconst setTodos = (todos: Todo []): SetTodosAction => ({\n  type: TodosActions.Set,\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\ntype State = Todo [] | [];\ntype Action = SetTodosAction;\n\nconst todosReducer = (\n  state: State = [],\n  action: Action,\n): State => {\n  switch ((action.type)) {\n    case TodosActions.Set: {\n      return action.payload;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { Todo } from '../../types/Todo';\nimport { actions } from '../../features/currentTodo';\nimport { Statuses } from '../../features/filter';\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const query = useAppSelector(state => state.filter.query);\n  const status = useAppSelector(state => state.filter.status);\n\n  const dispatch = useDispatch();\n\n  const setCurrentTodo = (todo: Todo) => dispatch(actions.setTodo(todo));\n\n  const getTodosToDisplay = (\n    todosFromDb: Todo [],\n    curQuery: string,\n    curStatus: string,\n  ) : Todo [] => {\n    let filteredTodos = [];\n\n    switch (curStatus) {\n      case Statuses.Completed:\n        filteredTodos = todosFromDb.filter((todo: Todo) => todo.completed);\n        break;\n      case Statuses.Active:\n        filteredTodos = todosFromDb.filter((todo: Todo) => !todo.completed);\n        break;\n      default:\n        filteredTodos = todosFromDb;\n    }\n\n    let searchTodos = [];\n\n    if (query) {\n      searchTodos = filteredTodos\n        .filter((todo: Todo) => todo.title.toLowerCase()\n          .includes(curQuery?.toLowerCase()));\n    } else {\n      searchTodos = filteredTodos;\n    }\n\n    return searchTodos;\n  };\n\n  const todosToDisplay = getTodosToDisplay(todos, query, status);\n\n  return (\n    <>\n      {todosToDisplay.length > 0\n        ? (\n          <table className=\"table is-narrow is-fullwidth\">\n            <thead>\n              <tr>\n                <th>#</th>\n\n                <th>\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </th>\n\n                <th>Title</th>\n                <th> </th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {todosToDisplay.map(todo => (\n                <React.Fragment key={todo.id}>\n                  <tr\n                    data-cy=\"todo\"\n                    className={todo.id === currentTodo?.id\n                      ? 'has-background-info-light' : ''}\n                  >\n                    <td className=\"is-vcentered\">\n                      {todo.id}\n                    </td>\n                    <td className=\"is-vcentered\">\n                      {todo.completed\n                        && <i className=\"fas fa-check\" />}\n                    </td>\n\n                    <td className=\"is-vcentered is-expanded\">\n                      <p\n                        className={todo.completed ? 'has-text-success'\n                          : 'has-text-danger'}\n                      >\n                        {todo.title}\n                      </p>\n                    </td>\n\n                    <td className=\"has-text-right is-vcentered\">\n                      <button\n                        data-cy=\"selectButton\"\n                        className=\"button\"\n                        type=\"button\"\n                        onClick={() => setCurrentTodo(todo)}\n                      >\n                        <span className=\"icon\">\n                          <i\n                            className={todo.id === currentTodo?.id\n                              ? 'far fa-eye-slash'\n                              : 'far fa-eye'}\n                          />\n                        </span>\n                      </button>\n                    </td>\n                  </tr>\n                </React.Fragment>\n              ))}\n            </tbody>\n          </table>\n        )\n        : (\n          <p className=\"notification is-warning\">\n            There are no todos matching current filter criteria\n          </p>\n        )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { actions, Statuses } from '../../features/filter';\nimport { useAppSelector } from '../../app/hooks';\n\nexport const TodoFilter: React.FC = () => {\n  const query = useAppSelector(state => state.filter.query);\n\n  const dispatch = useDispatch();\n\n  const setQuery = (curQuery: string) => dispatch(actions.setQuery(curQuery));\n\n  const setStatus = (curStatus: string) => dispatch(actions\n    .setStatus(curStatus));\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => {\n              setStatus(event.target.value);\n            }}\n          >\n            <option value={Statuses.All}>All</option>\n            <option value={Statuses.Active}>Active</option>\n            <option value={Statuses.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={(event) => setQuery(event.target.value)}\n          value={query}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Loader } from '../Loader';\nimport { useAppSelector } from '../../app/hooks';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { actions } from '../../features/currentTodo';\n\nexport const TodoModal: React.FC = () => {\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  const [user, setUser] = useState<User>({\n    id: 0,\n    name: '',\n    email: '',\n    phone: '',\n  });\n\n  useEffect(() => {\n    if (currentTodo?.id) {\n      getUser(currentTodo.id).then((result: User) => setUser(result))\n        .catch(() => setUser({\n          id: currentTodo.userId,\n          name: '',\n          email: '',\n          phone: '',\n        }));\n    }\n  }, [currentTodo]);\n\n  const dispatch = useDispatch();\n\n  const removeCurrentTodo = () => dispatch(actions.removeTodo());\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user?.id\n        ? (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${currentTodo?.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={removeCurrentTodo}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {currentTodo?.title}\n              </p>\n\n              {user?.name && (\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {currentTodo?.completed\n                    ? <strong className=\"has-text-success\">Done</strong>\n                    : <strong className=\"has-text-danger\">Planned</strong>}\n\n                  {' by '}\n\n                  <a href={`mailto:${user.email}`}>\n                    {user?.name}\n                  </a>\n                </p>\n              )}\n            </div>\n          </div>\n        )\n        : <Loader />}\n\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { useDispatch } from 'react-redux';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { actions } from './features/todos';\nimport { Todo } from './types/Todo';\nimport { useAppSelector } from './app/hooks';\n\nexport const App: React.FC = () => {\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const dispatch = useDispatch();\n  const setTodos = (todos: Todo []) => dispatch(actions.setTodos(todos));\n\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    getTodos().then(result => {\n      setIsLoaded(true);\n      setTodos(result);\n    }).catch(error => {\n      throw error;\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoaded\n                ? <TodoList />\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo?.title && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}